<?xml version="1.0" encoding="UTF-8"?>
<!-- 使用前，请好好查看配置文件说明及使用说明-->
<configure>
	<global>
		<!--生成代码路径 ,默认项目所在目录-->
		<property name="baseDir" value="f:\\code" />
		<!--基础包名，默认mapleLeaf.code-->
		<property name="basePackage" value="com.test" />
		<!-- 需要去掉的全局表名前缀，多个逗号分隔 ,默认""-->
		<property name="baseTabPrefix" value="sys_,wxcms_" />
		<!-- 需要去掉的全局字段名名前缀，多个逗号分隔 ,默认""-->
		<property name="baseColPrefix" value="" />
		<!-- 表字段是否下划线转驼峰命名 ，默认false-->
		<property name="columnCamel" value="false" />
		<!-- 持久层框架(mybatis,hibernate,other)，默认"mybatis" -->
		<property name="persistence" value="mybatis" />
		<!-- 一些公共类，工具类,父类等原样输出，不必需(包名=模板文件名(也是类名)，多个逗号隔开) -->
		<!-- 这里配置了分页类，mybatis分页拦截器, mybatis通用配置-->
		<!--  
		<common>common=Page,common=PageInterceptor,resource=Xml_mybatis</common>
		-->
	</global>

	<!-- 数据库配置 -->
	<db>
		<!-- 数据库类型(mysql,oracle,sqlserver,postgresql,informix) -->
		<dbType>mysql</dbType>
		<!-- 数据库名 -->
		<dbName>wxmp</dbName>
		<user>root</user>
		<pwd>q123</pwd>
		<driver>com.mysql.jdbc.Driver</driver>
		<url><![CDATA[jdbc:mysql://localhost:3306/wxmp?useUnicode=true&characterEncoding=UTF-8]]></url>
	</db>
	<!-- <db>
		<dbType>informix</dbType>
		<dbName>rmbp</dbName>
		<user>xxxx</user>
		<pwd>xxxx</pwd>
		<driver>com.informix.jdbc.IfxDriver</driver>
		<url><![CDATA[jdbc:informix-sqli://XXXXX/rmbp:informixserver=zjtsywtsdb;DB_LOCALE=en_us.819;
			CLIENT_LOCALE=en_us.57372;NEWCODESET=GBK,8859-1,819]]></url>
	</db> -->
	<!-- <db>
		<dbType>postgresql</dbType>
		<dbName>test</dbName>
		<user>postgres</user>
		<pwd>q123</pwd>
		<driver>org.postgresql.Driver</driver>
		<url><![CDATA[jdbc:postgresql://localhost:5432/test]]></url>
	</db> -->
	
	<!-- 模块化配置，可以配置多个module,
			各模块相互独立,name属性为模块名 -->
	<module name="test">
		<!-- 
			package标签 主要支持大多数  dao,service,controller三层架构
			实现类默认存放在对应接口包下的impl
			如果某个包配置为空或没配置，则该包对应的类，接口（实现类）不会生成代码 
		-->
		<package>
			<property name="entityPkg" value="entity"/>
			<property name="daoPkg" value="dao"/>
			<property name="servicePkg" value="service"/>
			<property name="controllerPkg" value="controller"/>
			<property name="mapperPkg" value="mapper"/>
		</package>
		<!--
			customArea自定义区域 ，只要提供模板，可任意生成代码，不仅限于java语言
		-->
		<customArea>
			<!-- 自定义生成，可以配置多组标签，属性customPkg包名，属性suffix 文件后缀;
				标签内容为模板文件(不需要后缀)，多个逗号分隔-->
			<codeFile customPkg="page" suffix="jsp">Jsp_list,Jsp_add</codeFile>
			<!-- 自定义参数设置 ，模板中可以通过${param['author']!}获取参数值 -->
			<param key="author" value="mapleLeaf"></param>
		</customArea>
		
		<!-- table配置表，属性tabName表名，
			  exclude排除指定包下的代码生成，多个逗号分隔（dao,service,controller,entity,custom）-->
		<table tabName="sys_user">
			<!-- 
			ref标签（单向）  关联表，如果需要双向关联  两个table都需配置对应对方的ref
			ref所对应的 tabName，必须配置table
			ref标签内容为 主表字段=关联表字段，默认可以多组，逗号分隔（推荐单组字段）（多对多时，则为 主表字段=中间表字段）
			多对多时：需配置midTabName和midRefCol属性
			midTabName中间表 不用配置table;midRefCol属性为（中间表字段=关联表字段）
			多对一时：需配置forKey 主表的关联字段（即外键）
			一对一时：关联字段（即外键）是否在 主表中，如果是，则配置forKey
			-->
			<ref tabName="wxcms_login_info" type="OneToMany">id=user_id</ref>
			<ref tabName="wxcms_user_tag" type="OneToMany">account=account</ref>
		</table>
		<table tabName="wxcms_login_info">
			<ref tabName="sys_user" type="ManyToOne" forKey="user_id">user_id=id</ref>
		</table>
		<table tabName="wxcms_user_tag" exclude="custom"/>
		
		<table tabName="wxcms_article" exclude="custom">
			<!-- exclude属性 ，需要排除的字段,多个逗号分隔-->
			<columnGroup exclude="title"> 
			   <!--column可以自定义一些表字段属性 ，这些配置主要是为了更好生成页面代码 -->
			   <column colName="author" labelName="作者"></column>
			   <!--表字段 自定义了 字段文本,表单类型及字段值标识  -->
			   <column colName="show_cover_pic" labelName="是否显示图片" tagType="checkbox">0=显示,1=不显示</column>
			</columnGroup>
		</table>
	</module>
</configure>